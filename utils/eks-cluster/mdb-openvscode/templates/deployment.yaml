apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mdb-openvscode.fullname" . }}
  labels:
    {{- include "mdb-openvscode.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "mdb-openvscode.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mdb-openvscode.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mdb-openvscode.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: workspace-setup
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            allowPrivilegeEscalation: true
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - "bash"
            - "-c"
            - |
              # Create persistent log file with timestamp
              INIT_LOG="/home/workspace/init-$(date +%Y%m%d-%H%M%S).log"
              {
                echo "Starting workspace initialization at $(date)"
                echo "Init container starting..."
                echo "Available files in /home/workspace/utils:"
                ls -la /home/workspace/utils/
                echo "Copying files..."
                cp /home/workspace/utils/startup.sh /tmp/startup.sh
                cp /home/workspace/utils/user_operations.sh /tmp/user_operations.sh
                cp /home/workspace/utils/openvscode_extensions.sh /tmp/openvscode_extensions.sh
                cp /home/workspace/utils/setup_lab_exercises.sh /tmp/setup_lab_exercises.sh
                echo "Files copied successfully"
                echo "Setting permissions..."
                chmod +x /tmp/startup.sh
                chmod +x /tmp/user_operations.sh
                chmod +x /tmp/openvscode_extensions.sh
                chmod +x /tmp/setup_lab_exercises.sh
                echo "Permissions set successfully"
                echo "Running openvscode_extensions.sh..."
                /tmp/openvscode_extensions.sh
                echo "openvscode_extensions.sh completed with exit code: $?"
                echo "Running startup.sh..."
                /tmp/startup.sh
                echo "startup.sh completed with exit code: $?"
                echo "Workspace initialization completed at $(date)"
              } >> "$INIT_LOG" 2>&1 || {
                echo "Workspace initialization FAILED at $(date) with exit code: $?" >> "$INIT_LOG"
                exit 1
              }
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
