resource "aws_prometheus_workspace" "example" {
  alias = "${var.cluster_name}-workspace"

  depends_on = [ 
    aws_eks_cluster.eks_cluster,
    helm_release.metrics_server
 ]
}

resource "aws_iam_role" "prometheus_role" {
  name = "${var.cluster_name}-prometheus-role"

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Effect = "Allow"
        Principal = {
          Service = "eks.amazonaws.com"
        }
        Action = "sts:AssumeRole"
      },
    ]
  })
}

resource "aws_iam_role_policy_attachment" "prometheus_amp_policy" {
  role       = aws_iam_role.prometheus_role.name
  policy_arn = "arn:aws:iam::aws:policy/AmazonPrometheusRemoteWriteAccess"
}

resource "aws_iam_role_policy_attachment" "grafana_query_policy" {
  role       = aws_iam_role.prometheus_role.name
  policy_arn = "arn:aws:iam::aws:policy/AmazonPrometheusQueryAccess"
}

resource "helm_release" "prometheus" {
  name       = "prometheus"
  repository = "https://prometheus-community.github.io/helm-charts"
  chart      = "prometheus"
  version    = "26.0.1"
  namespace  = "default"

  set {
    name  = "server.remoteWrite[0].url"
    value = "https://aps-workspaces.${var.aws_region}.amazonaws.com/workspaces/${aws_prometheus_workspace.example.id}/api/v1/remote_write"
  }

  set {
    name  = "server.remoteWrite[0].sigv4.region"
    value = var.aws_region
  }

  depends_on = [ 
    aws_prometheus_workspace.example
  ]
}

resource "aws_security_group_rule" "allow_https_egress" {
  type              = "egress"
  from_port         = 443
  to_port           = 443
  protocol          = "tcp"
  cidr_blocks       = ["0.0.0.0/0"]
  security_group_id = aws_security_group.eks_sg.id

  depends_on = [
    aws_security_group.eks_sg
   ]
}
